---
import Base from "../layouts/Base.astro";
import PostCard from "../components/PostCard.astro";
import { getCollection } from "astro:content";

const pageTitle = "Meaning Alignment Institute";

// Get blog posts from the writing collection
const allPosts = await getCollection("writing");

// Get people data from the people collection
const allPeople = await getCollection("people");

// Group people by category
const researchPeople = allPeople.filter((person) => person.data.category === "research");
const coreTeam = allPeople.filter((person) => person.data.category === "core");
const advisors = allPeople.filter((person) => person.data.category === "advisor");

// Sort posts by publication date (newest first)
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.id.substring(0, 6));
  const dateB = new Date(b.id.substring(0, 6));
  return dateB.getTime() - dateA.getTime();
});

// Filter featured posts and non-featured posts
const pinnedPosts = sortedPosts.filter((post) => post.data.featured === true);
const remainingPosts = sortedPosts.filter((post) => !post.data.featured);
---

<Base pageTitle={pageTitle}>
  <!-- Title + Nav Section -->
  <header>
    <div class="header-content">
      <p><a href="/">Meaning Alignment Institute</a></p>
      <nav class="main-nav">
        <ul>
          <li><a href="#research">Research</a></li>
          <li><a href="#about">About</a></li>
          <li><a href="#contact">Contact</a></li>
        </ul>
      </nav>
    </div>
    <h1>AI, markets, and democracies aligned with what truly matters.</h1>
  </header>

  <div class="content-grid">
    <!-- Research + Writing Section -->
    <section id="research">
      <h2 class="section-header">Research</h2>
      <div class="section-content">
        <p>
          Stay up to date, subscribe on <a href="https://meaningalignment.substack.com">Substack</a>.
        </p>
      </div>
      <div class="post-scroll-container">
        <div class="post-scroll">
          {pinnedPosts.map((post) => <PostCard imageUrl={post.data.coverImg || "/src/assets/covers/full-stack-alignment.png"} title={post.data.title} description={post.data.description} category="Featured" url={`/writing/${post.id}/`} featured={true} />)}
          {remainingPosts.map((post) => <PostCard imageUrl={post.data.coverImg || "/src/assets/covers/full-stack-alignment.png"} title={post.data.title} description={post.data.description} category="&nbsp" url={`/writing/${post.id}/`} />)}
          <!-- {remainingPosts.map((post) => <PostCard imageUrl={post.data.coverImg || "/src/assets/covers/full-stack-alignment.png"} title={post.data.title} category={post.data.description} url={`/writing/${post.id}/`} />)} -->
        </div>
      </div>
    </section>

    <!-- About + Organization Section -->
    <section id="about">
      <h2 class="section-header">About</h2>
      <div class="section-content">
        <p>
          The Meaning Alignment Institute aligns AI, markets, and democracies with what makes life meaningful. We call this <a href="/writing/full-stack-alignment">Full-Stack Alignment</a>.
        </p>
        <p>
          Collaborating with 30+ experts, we advance Full-Stack Alignment research from theory to practice. We're a non-profit supported by ARIA, <a href="https://openai.com">OpenAI</a>, <a href="https://survivalandflourishing.fund">SFF</a>, and others.
        </p>
        <p>
          Want to help? Reach us at <a href="mailto:hello@meaningalignment.org">hello@meaningalignment.org</a>
        </p>

        <div class="hover-info-square" id="hoverInfoSquare">
          <img id="hoverPortrait" src="/images/people/default.png" alt="Default portrait" />
          <div class="hover-info-content">
            <h4 id="hoverName">Joe Edelman</h4>
            <p id="hoverRole">Founder & Director</p>
            <p id="hoverBio">Joe focuses on meaning alignment for AI systems and social technologies, working to ensure these systems support what truly matters to people.</p>
          </div>
        </div>

        <h3>Research Network</h3>
        <ul class="people-list research-network">
          {researchPeople.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
        </ul>

        <div class="two-column">
          <div>
            <h3>Core Team</h3>
            <ul class="people-list core-team">
              {coreTeam.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
            </ul>
          </div>
          <div>
            <h3>Advisors</h3>
            <ul class="people-list advisors">
              {advisors.map((person) => <li data-person-id={person.id}>{person.data.name}</li>)}
            </ul>
          </div>
        </div>
      </div>
    </section>

    <!-- Contact + Socials Section -->
    <section id="contact">
      <h2 class="section-header">Contact</h2>
      <div class="section-content">
        <h3>Want to Collaborate?</h3>
        <p>
          <a href="mailto:research@meaningalignment.org">research@meaningalignment.org</a>
        </p>

        <h3>General Inquiry</h3>
        <p>
          <a href="mailto:hello@meaningalignment.org">hello@meaningalignment.org</a>
        </p>

        <h3>Follow Us</h3>
        <p>
          <a href="https://meaningalignment.substack.com">Substack</a><br />
          <a href="https://x.com/meaningaligned">X</a>
        </p>

        <ul class="locations-list">
          <li>Berlin, Germany</li>
          <li>San Francisco, United States</li>
        </ul>
      </div>
    </section>
  </div>
</Base>

<script define:vars={{ allPeople }}>
  // Prevent browser back navigation on horizontal scroll
  document.addEventListener("DOMContentLoaded", () => {
    const postScrolls = document.querySelectorAll(".post-scroll");

    postScrolls.forEach((scrollArea) => {
      let startX = 0;
      let isScrolling = false;

      // Track touch/mouse start position
      scrollArea.addEventListener(
        "touchstart",
        function (e) {
          startX = e.touches[0].clientX;
          isScrolling = true;
        },
        { passive: false }
      );

      scrollArea.addEventListener("mousedown", function (e) {
        startX = e.clientX;
        isScrolling = true;
      });

      // Handle touch move
      scrollArea.addEventListener(
        "touchmove",
        function (e) {
          if (!isScrolling) return;

          const touchX = e.touches[0].clientX;
          const scrollLeft = scrollArea.scrollLeft;

          // If at the left edge and trying to scroll further left
          if (scrollLeft <= 0 && touchX > startX) {
            e.preventDefault(); // Prevent the browser back navigation
          }
        },
        { passive: false }
      );

      // Reset on end of interaction
      const endScroll = function () {
        isScrolling = false;
      };

      scrollArea.addEventListener("touchend", endScroll);
      scrollArea.addEventListener("mouseup", endScroll);
      scrollArea.addEventListener("mouseleave", endScroll);

      // Also prevent wheel overscroll
      scrollArea.addEventListener(
        "wheel",
        function (e) {
          const scrollLeft = scrollArea.scrollLeft;

          // If at the left edge and trying to scroll further left with wheel
          if (scrollLeft <= 0 && e.deltaX < 0) {
            e.preventDefault();
          }
        },
        { passive: false }
      );
    });

    // Block history navigation from swipe gestures
    window.addEventListener("popstate", function (e) {
      // Check if the navigation was triggered by a gesture from our scroll area
      if (e.isTrusted && document.activeElement?.closest(".post-scroll-container, .post-scroll")) {
        history.pushState("", "", window.location.href);
      }
    });

    // Enhanced hover interaction for people lists
    const personItems = document.querySelectorAll(".research-network li, .core-team li, .advisors li");
    const hoverCard = document.getElementById("hoverInfoSquare");
    const hoverName = document.getElementById("hoverName");
    const hoverRole = document.getElementById("hoverRole");
    const hoverBio = document.getElementById("hoverBio");
    const hoverPortrait = document.getElementById("hoverPortrait");
    let hideTimeout;

    // Store default state
    const defaultState = {
      name: "Joe Edelman",
      role: "Founder & Director",
      bio: "Joe focuses on meaning alignment for AI systems and social technologies, working to ensure these systems support what truly matters to people.",
      portrait: "/images/people/default.png"
    };

    // Create a map for quick lookup
    const peopleMap = {};
    if (allPeople) {
      allPeople.forEach((person) => {
        peopleMap[person.id] = person.data;
      });
    }

    personItems.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        clearTimeout(hideTimeout);
        const personId = item.getAttribute("data-person-id");
        if (personId && peopleMap[personId]) {
          const personData = peopleMap[personId];
          hoverName.textContent = personData.name;
          hoverRole.textContent = personData.role;
          hoverBio.textContent = personData.bio;

          if (personData.portrait) {
            // Attempt to use the provided portrait. If it fails to load, fall back to the default.
            hoverPortrait.src = personData.portrait;
            hoverPortrait.alt = `Portrait of ${personData.name}`;

            // If the image 404s or cannot be loaded for any reason, fall back to the default placeholder.
            hoverPortrait.onerror = () => {
              hoverPortrait.onerror = null; // prevent infinite loop if default also errors
              hoverPortrait.src = "/images/people/default.png";
              hoverPortrait.alt = `Default portrait for ${personData.name}`;
            };
          } else {
            // No portrait specified â€“ immediately show the default image.
            hoverPortrait.src = "/images/people/default.png";
            hoverPortrait.alt = `Default portrait for ${personData.name}`;
          }
          hoverPortrait.style.display = "block";

          hoverCard.classList.remove("fade-out");
          hoverCard.classList.add("active");
        }
      });

      item.addEventListener("mouseleave", () => {
        hideTimeout = setTimeout(() => {
          hoverCard.classList.add("fade-out");
          hoverCard.classList.remove("active");
          
          // Reset to default state after fade out
          setTimeout(() => {
            hoverName.textContent = defaultState.name;
            hoverRole.textContent = defaultState.role;
            hoverBio.textContent = defaultState.bio;
            hoverPortrait.src = defaultState.portrait;
            hoverPortrait.alt = `Portrait of ${defaultState.name}`;
            hoverPortrait.style.display = "block";
          }, 200);
        }, 100);
      });
    });

    // Smooth scrolling for navigation
    const navLinks = document.querySelectorAll('.main-nav a');
    
    navLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        
        const targetId = this.getAttribute('href').substring(1);
        const targetSection = document.getElementById(targetId);
        
        if (targetSection) {
          window.scrollTo({
            top: targetSection.offsetTop,
            behavior: 'smooth'
          });
        }
      });
    });
  });
</script>

<style>
  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }
  
  /* Header home link (Meaning Alignment Institute) */
  .header-content p a {
    color: var(--txtColor, var(--fallback-txt-color));
    text-decoration: none;
  }
  
  .main-nav {
    display: flex;
    align-items: center;
  }
  
  .main-nav ul {
    display: flex;
    list-style: none;
    gap: 2rem;
    margin: 0;
    padding: 0;
  }
  
  /* Navigation links in header should be gray in both modes */
  .main-nav a {
    color: #777;
    text-decoration: none;
    font-size: 1rem;
    transition: color 0.2s ease;
  }
  
  .main-nav a:hover {
    color: #999;
  }
  
  /* Dark mode for header home link */
  @media (prefers-color-scheme: dark) {
    .header-content p a {
      color: var(--txtColorDark, var(--fallback-txt-color-dark));
      text-decoration: none;
    }
  }
  
  /* Hide navigation on small screens */
  @media (max-width: 768px) {
    .main-nav {
      display: none;
    }
  }

  /* Hover Info Component */
  .hover-info-square {
    background-color: var(--bgColor, var(--fallback-bg-color));
    border: 1px solid var(--fallback-txt-color-faded);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: var(--space-large);
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--transition-normal) ease-in,
                visibility 0s var(--transition-normal);
    z-index: 1000;
    overflow: auto;
    pointer-events: none;
    position: fixed;
    bottom: var(--space-large);
    left: var(--space-large);
    width: 300px;
  }

  #hoverPortrait {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 50%;
    margin-bottom: var(--space-small);
  }

  .hover-info-content {
    text-align: left;
    width: 100%;
  }

  #hoverName {
    font-size: 1.5rem;
    margin: 0 0 var(--space-small) 0;
  }

  #hoverRole {
    font-size: var(--font-size-base);
    opacity: var(--opacity-hover);
    margin: 0 0 var(--space-standard) 0;
  }

  #hoverBio {
    font-size: 0.9rem;
    line-height: 1.4;
    margin: 0;
    display: -webkit-box;
    
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .hover-info-square.active {
    opacity: 1;
    visibility: visible;
    transition: opacity var(--transition-normal) ease-in,
                visibility 0s;
  }

  .hover-info-square.fade-out {
    opacity: 0;
    transition: opacity var(--transition-fast) ease-out,
                visibility 0s var(--transition-fast);
  }

  /* Dark Mode */
  @media (prefers-color-scheme: dark) {
    .hover-info-square {
      background-color: var(--bgColorDark, var(--fallback-bg-color-dark));
      border: 1px solid var(--fallback-txt-color-dark-faded);
    }
  }
</style>
